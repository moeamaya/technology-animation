// Generated by CoffeeScript 1.9.3
(function() {
  var TechNetwork, TechNetworkLine, techAnimation,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(function() {
    var $container, $doc, $techAnim;
    $techAnim = $('.tech-anim');
    if ($techAnim.length > 0) {
      $doc = $(document);
      window.techAnim = new techAnimation();
      $container = $('.slides');
      return $container.fullpage({
        verticalCentered: false,
        css3: true,
        navigation: true,
        navigationPosition: 'left',
        navigationTooltips: ['', 'Stack', 'Network', 'Secure Load Balancing', 'Apps', 'Team Access', 'Databases', 'Scaling', 'Signup'],
        anchors: ['intro-tech', 'stack-tech', 'network-tech', 'secure-load-balancing-tech', 'apps-tech', 'team-access-tech', 'databases-tech', 'scaling-tech', 'signup-tech'],
        showActiveTooltip: true,
        keyboardScrolling: false,
        afterLoad: function(anchorLink, index) {
          return techAnim.play[index - 1].call(this);
        },
        onLeave: function(index, nextIndex, direction) {
          var click, ref;
          click = (ref = Math.abs(nextIndex - index) !== 1) != null ? ref : {
            "true": false
          };
          if (click) {
            $('.slides, .fixed-diagram, .fixed-console, .network-container').fadeOut(50);
            return techAnim.clickOn[nextIndex - 1].call(this);
          } else if (nextIndex - index === 1) {
            return techAnim.leave[index - 1].call(this);
          } else if (nextIndex - index === -1) {
            return techAnim.leaveUp[index - 2].call(this);
          }
        },
        afterRender: function() {
          return $container.css('opacity', 1);
        }
      });
    }
  });

  techAnimation = (function() {
    var Helpers, awsTitle, clickApp, clickBastion, clickDatabse, clickGateway, clickInfrastructure, clickIntro, clickNetwork, clickReset, clickScaling, clickSignup, createNetwork, finalInfrastructureState, fixedConsole, fixedDiagram, infrastructure, intro, leaveApp, leaveBastion, leaveDatabase, leaveGateway, leaveInfrastructure, leaveIntro, leaveNetwork, leaveScaling, leaveUpApp, leaveUpBastion, leaveUpDatabase, leaveUpGateway, leaveUpInfrastructure, leaveUpNetwork, leaveUpScaling, leaveUpSignup, network, playApp, playBastion, playDatabase, playGateway, playInfrastructure, playIntro, playNetwork, playScaling, playSignup, scaling, stopInfrastructure;

    function techAnimation() {}

    awsTitle = $('.diagram .title');

    fixedDiagram = $('.fixed-diagram');

    fixedConsole = $('.fixed-console');

    network = null;

    intro = {
      played: false
    };

    infrastructure = {
      played: false,
      copyAnim: null,
      circleAnim: null,
      privateAnim: null
    };

    scaling = {
      half2: null
    };

    Helpers = {
      staggerType: function(char, $src, delay) {
        return setTimeout((function() {
          return $src.append(char);
        }), delay);
      },
      typeConsole: function(str, $src) {
        var delay, i, j, max, min, ref, results;
        max = 80;
        min = 0;
        results = [];
        for (i = j = 0, ref = str.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
          delay = Math.floor(Math.random() * (max - min)) + min + (i * max);
          results.push(this.staggerType(str[i], $src, delay));
        }
        return results;
      }
    };

    playIntro = function() {
      animate({
        el: '.console',
        easing: 'easeOutCirc',
        opacity: [0, 1],
        translateY: [1000, 0],
        duration: 1500,
        delay: 100
      });
      setTimeout((function() {
        return $('#intro .copy').removeClass('disappear');
      }), 300);
      if (!intro.played) {
        intro.played = true;
        animate({
          el: '.intro-header',
          easing: 'easeOutCirc',
          opacity: [0, 1],
          duration: 1500,
          delay: 1600
        });
        animate({
          el: '.intro-text',
          easing: 'easeOutQuad',
          opacity: [0, 1],
          duration: 1500,
          delay: 1900
        });
        animate({
          el: '.primary-header',
          easing: 'easeOutQuad',
          opacity: [0, 1],
          duration: 1000,
          delay: 2300
        });
        return setTimeout((function() {
          var $src;
          $src = $('.b1-text');
          return Helpers.typeConsole('aptible account:create', $src);
        }), 2000);
      }
    };

    playInfrastructure = function() {
      if (infrastructure.played) {
        $('.load-balancer, .app, .bastion, .database').removeClass('faded');
        $('.network-container').addClass('disappear');
        $('#infrastructure .copy').removeClass('disappear');
        return awsTitle.css('color', 'rgba(255,255,255,0.3)');
      } else {
        animate({
          el: fixedDiagram,
          easing: 'easeOutQuad',
          opacity: [0, 1],
          translateY: [80, 0],
          duration: 300,
          delay: 600
        });
        infrastructure.copyAnim = setTimeout((function() {
          return $('#infrastructure .copy').removeClass('disappear');
        }), 400);
        animate({
          el: '.customer-vpc-dots',
          opacity: [0, 1],
          scaleX: [0.8, 1.0],
          scaleY: [0.8, 1.0],
          duration: 1200,
          delay: 1300
        });
        animate({
          el: '.loading-circle-1',
          opacity: [0, 1],
          scaleX: [0.8, 1.0],
          scaleY: [0.8, 1.0],
          duration: 1200,
          delay: 1400,
          complete: function(obj) {
            return $(obj).addClass('rotate-rev');
          }
        });
        animate({
          el: '.loading-circle-2',
          opacity: [0, 1],
          scaleX: [0.8, 1.0],
          scaleY: [0.8, 1.0],
          duration: 1200,
          delay: 1500,
          complete: function(obj) {
            return $(obj).addClass('rotate');
          }
        });
        animate({
          el: '.loading-text',
          easing: 'easeOutCirc',
          opacity: [0, 1],
          translateY: [10, 0],
          duration: 600,
          delay: 2000
        });
        infrastructure.circleAnim = setTimeout((function() {
          $('.loading-circle-1, .loading-circle-2, .loading-text').fadeOut();
          return $('.customer-vpc-dots, .customer-vpc').addClass('loaded');
        }), 3000);
        setTimeout((function() {
          return awsTitle.css('color', 'rgba(255,255,255,0.3)');
        }), 3600);
        animate({
          el: '.private',
          opacity: [0, 1],
          easing: 'easeOutCirc',
          duration: 400,
          delay: 4000
        });
        infrastructure.privateAnim = setTimeout((function() {
          return $('.private').addClass('loaded');
        }), 4200);
        animate({
          el: '.public span',
          opacity: [0, 1],
          translateY: [10, 0],
          duration: 1000,
          delay: 5400
        });
        animate({
          el: '.private span',
          opacity: [0, 1],
          translateY: [10, 0],
          duration: 1000,
          delay: 5700
        });
        animate({
          el: '.public .left, .public .right',
          easing: 'easeOutCirc',
          opacity: [0, 1],
          duration: 800,
          delay: 6500
        });
        animate({
          el: '.load-balancer, .app, .bastion, .database',
          easing: 'easeOutCirc',
          opacity: [0, 1],
          duration: 1200,
          delay: 7100
        });
        return infrastructure.finalAnim = setTimeout((function() {
          return infrastructure.played = true;
        }), 7000);
      }
    };

    playGateway = function() {
      $('.http, .ssh').addClass('faded');
      $('#network .copy').removeClass('disappear');
      setTimeout((function() {
        return $('.docker').addClass('faded');
      }), 100);
      if (!network) {
        network = new TechNetwork();
        return network.createNetwork();
      } else {
        return $('.network-container').removeClass('disappear');
      }
    };

    playNetwork = function() {
      $('.http, .load-balancer').removeClass('faded');
      return $('#load-balancing .copy').removeClass('disappear');
    };

    playApp = function() {
      $('.app').removeClass('faded');
      return $('#apps .copy').removeClass('disappear');
    };

    playBastion = function() {
      $('.ssh, .bastion').removeClass('faded');
      return $('#bastion .copy').removeClass('disappear');
    };

    playDatabase = function() {
      $('.database').removeClass('faded');
      return $('#database .copy').removeClass('disappear');
    };

    playScaling = function() {
      $('.load-balancer, .app, .bastion, .database').removeClass('faded');
      $('#scale .copy').removeClass('disappear');
      return scaling.half2 = setTimeout((function() {
        return network.runHalf2();
      }), 3000);
    };

    playSignup = function() {
      $('.load-balancer, .app, .bastion, .database').removeClass('faded');
      return $('#signup .copy').removeClass('disappear');
    };

    leaveIntro = function() {
      animate.stop('.console');
      animate({
        el: '.console',
        easing: 'easeOutQuad',
        translateY: [0, 50],
        opacity: [1, 0],
        duration: 400,
        delay: 50
      });
      if (infrastructure.played) {
        fixedDiagram.fadeIn(50);
        return animate({
          el: fixedDiagram,
          easing: "easeOutQuad",
          opacity: [0, 1],
          duration: 800
        });
      }
    };

    leaveInfrastructure = function() {
      $('#infrastructure .copy').addClass('disappear');
      if (!infrastructure.played) {
        fixedDiagram.fadeOut(50);
        stopInfrastructure();
        clickReset();
        if (!network) {
          return setTimeout((function() {
            return finalInfrastructureState();
          }), 100);
        }
      }
    };

    leaveGateway = function() {
      $('#network .copy').addClass('disappear');
      return network.runHttp();
    };

    leaveNetwork = function() {
      $('#load-balancing .copy').addClass('disappear');
      $('.http, .load-balancer').addClass('faded');
      return network.stop();
    };

    leaveApp = function() {
      $('#apps .copy').addClass('disappear');
      $('.app').addClass('faded');
      return network.runSSH();
    };

    leaveBastion = function() {
      $('#bastion .copy').addClass('disappear');
      $('.bastion').addClass('faded');
      $('.ssh').addClass('faded');
      return network.stop();
    };

    leaveDatabase = function() {
      $('#database .copy').addClass('disappear');
      return network.runHalf();
    };

    leaveScaling = function() {
      $('#scale .copy').addClass('disappear');
      clearTimeout(scaling.half2);
      return network.stop();
    };

    leaveUpInfrastructure = function() {
      animate({
        el: fixedDiagram,
        easing: "easeOutQuad",
        opacity: [1, 0],
        duration: 300
      });
      setTimeout((function() {
        return $('.fixed-console').fadeIn();
      }), 800);
      $('#infrastructure .copy').addClass('disappear');
      if (!infrastructure.played) {
        fixedDiagram.fadeOut(50);
        return clickReset((function() {
          return fixedConsole.fadeIn();
        }), false);
      }
    };

    leaveUpGateway = function() {
      setTimeout((function() {
        return $('#infrastructure .copy').removeClass('disappear');
      }), 500);
      return $('.http, .ssh, .load-balancer, .app, .bastion, .database').removeClass('faded');
    };

    leaveUpNetwork = function() {
      setTimeout((function() {
        return $('#network .copy').removeClass('disappear');
      }), 500);
      $('.http, .load-balancer').addClass('faded');
      return network.stop();
    };

    leaveUpApp = function() {
      setTimeout((function() {
        return $('#load-balancing .copy').removeClass('disappear');
      }), 500);
      $('.app').addClass('faded');
      return network.runHttp();
    };

    leaveUpBastion = function() {
      setTimeout((function() {
        return $('#apps .copy').removeClass('disappear');
      }), 500);
      $('.bastion').addClass('faded');
      $('.ssh').addClass('faded');
      return network.stop();
    };

    leaveUpDatabase = function() {
      setTimeout((function() {
        return $('#bastion .copy').removeClass('disappear');
      }), 500);
      $('.database').addClass('faded');
      return network.runSSH();
    };

    leaveUpScaling = function() {
      setTimeout((function() {
        return $('#database .copy').removeClass('disappear');
      }), 500);
      $('.http, .ssh, .load-balancer, .app, .bastion').addClass('faded');
      clearTimeout(scaling.half2);
      return network.stop();
    };

    leaveUpSignup = function() {
      setTimeout((function() {
        return $('#scale .copy').removeClass('disappear');
      }), 500);
      return network.runHalf();
    };

    finalInfrastructureState = function(show) {
      if (show == null) {
        show = true;
      }
      $('.customer-vpc-dots, .customer-vpc').css({
        transition: 'all 50ms linear',
        opacity: 1
      }).addClass('loaded');
      awsTitle.css('color', 'rgba(255,255,255,0.3)');
      $('.private').css({
        transition: 'all 50ms linear',
        opacity: 1
      }).addClass('loaded');
      $('.public span, .private span').css('opacity', 1);
      $('.public .left, .public .right').css('opacity', 1);
      $('.load-balancer, .app, .bastion, .database').css('opacity', 1).addClass('faded');
      animate({
        el: fixedDiagram,
        easing: 'easeOutQuad',
        opacity: [0, 1],
        duration: 300,
        delay: 100
      });
      return setTimeout((function() {
        if (show) {
          fixedDiagram.fadeIn();
        }
        $('.slides').fadeIn();
        infrastructure.played = true;
        return createNetwork();
      }), 500);
    };

    createNetwork = function() {
      if (!network) {
        network = new TechNetwork();
        return network.createNetwork();
      }
    };

    stopInfrastructure = function() {
      animate.stop('.console');
      animate.stop('.fixed-diagram');
      animate.stop('.customer-vpc-dots');
      animate.stop('.loading-circle-1');
      animate.stop('.loading-circle-2');
      animate.stop('.loading-text');
      animate.stop('.private');
      animate.stop('.public span');
      animate.stop('.private span');
      animate.stop('.public .left, .public .right');
      animate.stop('.load-balancer, .app, .bastion, .database');
      clearTimeout(infrastructure.copyAnim);
      clearTimeout(infrastructure.circleAnim);
      clearTimeout(infrastructure.privateAnim);
      clearTimeout(scaling.half2);
      return setTimeout((function() {
        $('.loading-circle-1, .loading-circle-2, .loading-text').remove();
        $('.diagram span.title').css('color', 'rgba(255,255,255,0.3)');
        return infrastructure.played = true;
      }), 500);
    };

    clickReset = function(callback, show) {
      if (show == null) {
        show = true;
      }
      stopInfrastructure();
      $('.copy').addClass('disappear');
      if (!network) {
        return setTimeout((function() {
          return finalInfrastructureState(show);
        }), 100);
      } else {
        network.stop();
        animate({
          el: fixedDiagram,
          easing: "easeOutQuad",
          opacity: [0, 1],
          duration: 50
        });
        $('.network-container').removeClass('disappear');
        $('.load-balancer, .app, .bastion, .database').css('opacity', 1).addClass('faded');
        return setTimeout((function() {
          $('.slides').fadeIn();
          return callback();
        }), 1000);
      }
    };

    clickIntro = function() {
      return clickReset(function() {
        return fixedConsole.fadeIn();
      });
    };

    clickInfrastructure = function() {
      return clickReset(function() {
        return fixedDiagram.fadeIn();
      });
    };

    clickGateway = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        return $('.network-container').fadeIn();
      });
    };

    clickNetwork = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        $('.network-container').fadeIn();
        return setTimeout((function() {
          return network.runHttp;
        }), 100);
      });
    };

    clickApp = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        return $('.network-container').fadeIn();
      });
    };

    clickBastion = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        $('.network-container').fadeIn();
        return setTimeout((function() {
          return network.runSSH;
        }), 100);
      });
    };

    clickDatabse = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        return $('.network-container').fadeIn();
      });
    };

    clickScaling = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        $('.network-container').fadeIn();
        return setTimeout((function() {
          return network.runHalf;
        }), 100);
      });
    };

    clickSignup = function() {
      return clickReset(function() {
        fixedDiagram.fadeIn();
        return $('.network-container').fadeIn();
      });
    };

    techAnimation.prototype.play = [playIntro, playInfrastructure, playGateway, playNetwork, playApp, playBastion, playDatabase, playScaling, playSignup];

    techAnimation.prototype.leave = [leaveIntro, leaveInfrastructure, leaveGateway, leaveNetwork, leaveApp, leaveBastion, leaveDatabase, leaveScaling];

    techAnimation.prototype.leaveUp = [leaveUpInfrastructure, leaveUpGateway, leaveUpNetwork, leaveUpApp, leaveUpBastion, leaveUpDatabase, leaveUpScaling, leaveUpSignup];

    techAnimation.prototype.clickOn = [clickIntro, clickInfrastructure, clickGateway, clickNetwork, clickApp, clickBastion, clickDatabse, clickScaling, clickSignup];

    return techAnimation;

  })();

  TechNetwork = (function() {
    var $networkContainer, $vpc, $vpcPosition, OFFSET, SPACING, allLines, destroyNetwork, generateLines, generateNetwork, halfLines, httpLines, numLines, regenerateNetwork, sshLines, vpcLeft, vpcTop, vpcWidth;

    function TechNetwork() {}

    OFFSET = 32;

    SPACING = 16;

    $networkContainer = null;

    $vpc = null;

    $vpcPosition = null;

    vpcTop = 0;

    vpcLeft = 0;

    vpcWidth = 0;

    numLines = 0;

    halfLines = 0;

    httpLines = [];

    sshLines = [];

    allLines = [];

    generateNetwork = function() {
      var vpcPosition;
      $vpc = $('.customer-vpc');
      vpcPosition = $vpc.offset();
      vpcTop = Math.floor(vpcPosition.top);
      vpcLeft = Math.floor(vpcPosition.left) + (OFFSET / 2);
      vpcWidth = $vpc.outerWidth() - OFFSET;
      numLines = Math.ceil(vpcWidth / SPACING);
      halfLines = Math.ceil(numLines * 0.65);
      $networkContainer = $('<div class="network-container">').css({
        height: vpcTop + 'px',
        width: vpcWidth,
        left: vpcLeft + 'px'
      });
      $('body').append($networkContainer);
      return generateLines();
    };

    generateLines = function() {
      var i, j, line, lineObj, lyne, ref, results, yPos;
      results = [];
      for (i = j = 0, ref = numLines; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        yPos = i * SPACING;
        lyne = $('<div class="network-line">');
        if (i < halfLines) {
          lineObj = new TechNetworkLine(lyne);
          lineObj.createLine(yPos, 'left');
          httpLines.push(lineObj);
        } else {
          lineObj = new TechNetworkLine(lyne);
          lineObj.createLine(yPos, 'right');
          sshLines.push(lineObj);
        }
        allLines = httpLines.concat(sshLines);
        line = lineObj.getDOMObject();
        results.push($networkContainer.append(line));
      }
      return results;
    };

    regenerateNetwork = function() {
      destroyNetwork();
      return generateNetwork();
    };

    destroyNetwork = function() {
      var i, j, ref;
      $networkContainer.remove();
      for (i = j = 0, ref = allLines.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        allLines[i].getDOMObject().remove();
        delete allLines[i];
      }
      httpLines = [];
      sshLines = [];
      return allLines = [];
    };

    $(window).resize(function() {
      return regenerateNetwork();
    });

    TechNetwork.prototype.createNetwork = function() {
      return generateNetwork();
    };

    TechNetwork.prototype.runHttp = function() {
      var i, j, ref, results;
      results = [];
      for (i = j = 0, ref = httpLines.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (i % 2 === 0) {
          results.push(httpLines[i].startActivity());
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    TechNetwork.prototype.runSSH = function() {
      var i, j, ref, results;
      results = [];
      for (i = j = 0, ref = sshLines.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (i !== 0 && i % 2 === 0) {
          results.push(sshLines[i].startActivity());
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    TechNetwork.prototype.runHalf = function() {
      var i, j, ref, results;
      results = [];
      for (i = j = 0, ref = allLines.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (i % 2 === 0) {
          results.push(allLines[i].startActivity());
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    TechNetwork.prototype.runHalf2 = function() {
      var i, j, ref, results;
      results = [];
      for (i = j = 0, ref = allLines.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (i % 2 !== 0) {
          results.push(allLines[i].startActivity());
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    TechNetwork.prototype.stop = function() {
      var i, j, ref, results;
      results = [];
      for (i = j = 0, ref = allLines.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        results.push(allLines[i].stopActivity());
      }
      return results;
    };

    return TechNetwork;

  })();

  TechNetworkLine = (function() {
    function TechNetworkLine(line) {
      this.step = bind(this.step, this);
      this.start = null;
      this.startTime = null;
      this.line = line;
      this.dot = null;
      this.active = null;
      this.animating = null;
    }

    TechNetworkLine.prototype.randomTime = function(max, min) {
      return (Math.random() * (max - min) + min) * 1000;
    };

    TechNetworkLine.prototype.step = function(timestamp) {
      var progress, stepping;
      if (!this.start) {
        this.start = timestamp;
      }
      progress = timestamp - this.start;
      stepping = Math.min(progress / 20, 96);
      this.active.css('transform', 'scaleY(' + stepping / 100 + ')');
      this.dot.css('top', stepping + '%');
      if (progress < 2000) {
        return this.animating = window.requestAnimationFrame(this.step);
      } else {
        this.resetActivity();
        return this.animating = window.requestAnimationFrame(this.step);
      }
    };

    TechNetworkLine.prototype.generateLine = function(yPos, klass) {
      this.line.addClass(klass);
      this.line.css('left', yPos + "px");
      this.startTime = this.randomTime(0, 3);
      return this.createActive();
    };

    TechNetworkLine.prototype.createActive = function() {
      this.active = $('<div class="active">');
      this.dot = $('<div class="dot">');
      return this.line.append(this.active).append(this.dot);
    };

    TechNetworkLine.prototype.runActivity = function() {
      this.showActive();
      return setTimeout(((function(_this) {
        return function() {
          return _this.animating = window.requestAnimationFrame(_this.step);
        };
      })(this)), this.startTime);
    };

    TechNetworkLine.prototype.destroyActivity = function() {
      this.hideActive();
      return setTimeout(((function(_this) {
        return function() {
          window.cancelAnimationFrame(_this.animating);
          _this.animating = null;
          return _this.resetActivity();
        };
      })(this)), 600);
    };

    TechNetworkLine.prototype.resetActivity = function() {
      this.active.css('transform', 'scaleY(0)');
      this.dot.css('top', '0%');
      return this.start = null;
    };

    TechNetworkLine.prototype.showActive = function() {
      console.log(this.dot.offset().left);
      animate({
        el: this.dot,
        easing: 'easeOutCirc',
        opacity: [0, 1],
        duration: 600
      });
      return animate({
        el: this.active,
        easing: 'easeOutCirc',
        opacity: [0, 1],
        duration: 600
      });
    };

    TechNetworkLine.prototype.hideActive = function() {
      animate({
        el: this.dot,
        easing: 'easeOutCirc',
        opacity: [1, 0],
        duration: 600
      });
      return animate({
        el: this.active,
        easing: 'easeOutCirc',
        opacity: [1, 0],
        duration: 600
      });
    };

    TechNetworkLine.prototype.createLine = function(yPos, klass) {
      return this.generateLine(yPos, klass);
    };

    TechNetworkLine.prototype.getDOMObject = function() {
      return this.line;
    };

    TechNetworkLine.prototype.startActivity = function() {
      return this.runActivity();
    };

    TechNetworkLine.prototype.stopActivity = function() {
      return this.destroyActivity();
    };

    return TechNetworkLine;

  })();

}).call(this);
